*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  /* overwrites the browser default (16px). Means 1 rem is the root font size, making all font sizes now flexible to this no matter the device
    This is set to % so its not so hard coded and reacts to user specific settings, like if theyve changed default font size because of sight.
    62.5% of 16px is 10px. */
  font-size: 62.5%; }

body {
  font-family: "Lato";
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 70%, 0 100%); }

.header__logo-box {
  position: absolute;
  /*uses .header as its position to count top and left from */
  top: 4rem;
  left: 4rem; }

.header__logo {
  height: 3.5rem; }

/* put the order of css in the order it appearss in html to make things easier to follow*/
.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* if you did the above without the transform, you will see the element is weirdly positioned. It will be too far to the right. 
    Thats because where the element is being positioned from is the top left corner of the box. 
    Transform changes where the thing is being positioned from, so now the element will be positioned 50% top and left relating to the middle of the box.*/
  transform: translate(-50%, -50%);
  /*background-color: red;*/
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* used to aid jumpiness in css animation used in other elements*/
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.heading-primary--main {
  /* Display block lets you take the whole width of the screen*/
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  /* These are the only 2 things to add animation to an element*/
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* 
    animation-delay: 2s;
    animation-iteration-count: 3;

    */ }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.6rem;
  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out; }

@keyframes moveInLeft {
  /*%ages mean what happens at certain keyframes. so 0 is start of animaitopn and 100% at the end.*/
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    /*translate 0 is to put it how the index.html wants it.*/
    transform: translate(0); } }

@keyframes moveInRight {
  /*%ages mean what happens at certain keyframes. so 0 is start of animaitopn and 100% at the end.*/
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    /*translate 0 is to put it how the index.html wants it.*/
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  100% {
    opacity: 1;
    /*translate 0 is to put it how the index.html wants it.*/
    transform: translate(0); } }

/*one style used for all buttons, btn-white used for specific things to that style*/
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  /* display gives it its own space*/
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-5px);
  /*x y and shadow*/
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

/*active as a reminder is when its actively clicked */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn::after {
  /* must have content to appear, same for display*/
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4; }

.btn--hite::after {
  background-color: #fff; }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  /*animation fill mode applies the 0% keyframe before the animation starts, in this case making the button opacity 0 before the delay kicks in and animates*/
  animation-fill-mode: backwards; }
